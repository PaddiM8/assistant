// <auto-generated />
using System;
using Assistant.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;
using Pgvector;

#nullable disable

namespace Assistant.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250524232642_MessagePriority")]
    partial class MessagePriority
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "vector");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Assistant.Database.EmbeddingEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Context")
                        .HasColumnType("integer");

                    b.Property<Vector>("Embedding")
                        .HasColumnType("vector(1536)");

                    b.Property<NpgsqlTsVector>("FullTextSearchVector")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("tsvector")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english")
                        .HasAnnotation("Npgsql:TsVectorProperties", new[] { "Content" });

                    b.Property<bool>("IsStale")
                        .HasColumnType("boolean");

                    b.Property<int?>("RelatedItemId")
                        .HasColumnType("integer");

                    b.Property<string>("RelatedItemTableName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddedAtUtc");

                    b.HasIndex("Context");

                    b.HasIndex("FullTextSearchVector");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("FullTextSearchVector"), "gin");

                    b.HasIndex("IsStale");

                    b.HasIndex("RelatedItemTableName", "RelatedItemId")
                        .IsUnique();

                    b.ToTable("Embeddings");
                });

            modelBuilder.Entity("Assistant.Database.ScheduleEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Kind")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int?>("RecurrenceInterval")
                        .HasColumnType("integer");

                    b.Property<int?>("RecurrenceUnit")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TriggerAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Kind");

                    b.HasIndex("TriggerAtUtc");

                    b.ToTable("ScheduleEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
